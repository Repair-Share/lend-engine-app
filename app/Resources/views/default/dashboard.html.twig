{% extends 'base.html.twig' %}

{% block pageTitle %}Dashboard{% endblock %}

{% block body %}

    {% if isMultiSite %}
        <div class="row">
            <div class="col-md-12">
                {% if activeSite %}
                    <div class="alert alert-info">
                        <h4>You're currently working at <strong>{{ activeSite.name }}</strong></h4>
                        <div style="overflow: hidden">
                            This will define your default check-in location, and the check-out location when creating new loans.
                            <a href="{{ path('choose_site') }}" class="btn btn-primary pull-right modal-link" id="change-site-link" style="color:#fff">Change site</a>
                        </div>
                    </div>
                {% else %}
                    <a href="{{ path('choose_site') }}" class="modal-link" id="choose-site-link" style="display: none;">Choose the site you are working at today</a>
                {% endif %}
            </div>
        </div>
    {% endif %}

    <div class="row">
        <div class="col-md-7">
            <h4>Latest features and updates</h4>
            <div class="well" style="height:300px; overflow: scroll">
                {{ include('admin/updates.html.twig') }}
            </div>
        </div>
        <div class="col-md-2">
            <h4>User guide</h4>
            <a href="https://www.lend-engine.com/support" target="_blank">
                <img src="/images/user_guide.png" class="img-responsive img-thumbnail" style="height: 200px">
            </a>
            <a href="https://www.lend-engine.com/support" style="margin: 10px 0"
               class="btn btn-primary btn-sm btn-block" target="_blank">Download the guide</a>
            <div class="small">
                In-depth information for administrators and staff.
            </div>
        </div>
        <div class="col-md-3">
            <h4>Community support</h4>
            <a href="https://www.facebook.com/groups/2264099010336961/" target="_blank">
                <img src="/images/screenshots/FacebookGroup.png" class="img-responsive img-thumbnail">
            </a>
            <a href="https://www.facebook.com/groups/2264099010336961/" style="margin: 10px 0"
               class="btn btn-primary btn-sm btn-block" target="_blank">Join our Facebook group</a>
            <div class="small">
                Give us feedback on features, suggest new ideas, get tips from other libraries, and get involved with the global lending community.
            </div>
        </div>
    </div>

    <div class="row" id="loan-counts">
        <div class="col-lg-3 dash-loan-data">
            <div class="info-box">
                <span class="info-box-icon bg-gray"><i class="fa fa-shopping-bag"></i></span>
                <div class="info-box-content">
                    <span class="info-box-text">Pending</span>
                    <span class="info-box-number" id="count-pending">{{ dashData.loansByStatus.pending }}</span>
                    <span class="info-box-text"><a href="{{ path('loan_list', { status: "PENDING" }) }}">View list</a></span>
                </div>
            </div>
        </div>
        <div class="col-lg-3 dash-loan-data">
            <div class="info-box">
                <span class="info-box-icon bg-teal"><i class="fa fa-shopping-bag"></i></span>
                <div class="info-box-content">
                    <span class="info-box-text">On loan</span>
                    <span class="info-box-number">{{ dashData.loansByStatus.active }}</span>
                    <span class="info-box-text"><a href="{{ path('loan_list', { status: "ACTIVE" }) }}">View list</a></span>
                </div>
            </div>
        </div>
        <div class="col-lg-3 dash-loan-data">
            <div class="info-box">
                <span class="info-box-icon bg-red"><i class="fa fa-shopping-bag"></i></span>
                <div class="info-box-content">
                    <span class="info-box-text">Overdue</span>
                    <span class="info-box-number">{{ dashData.loansByStatus.overdue }}</span>
                    <span class="info-box-text"><a href="{{ path('loan_list', { status: "OVERDUE" }) }}">View list</a></span>
                </div>
            </div>
        </div>
        <div class="col-lg-3 dash-loan-data">
            <div class="info-box">
                <span class="info-box-icon bg-orange"><i class="fa fa-shopping-bag"></i></span>
                <div class="info-box-content">
                    <span class="info-box-text">Reservations</span>
                    <span class="info-box-number">{{ dashData.loansByStatus.reserved }}</span>
                    <span class="info-box-text"><a href="{{ path('loan_list', { status: "RESERVED" }) }}">View list</a></span>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-4 col-md-6">
            <div class="box">
                <div class="box-header with-border">
                    New contacts
                </div>
                <div class="box-body">
                    <canvas id="contactsAddedByMonth" height="160" style="height: 160px; width: 720px"></canvas>
                </div>
            </div>
        </div>
        <div class="col-lg-4 col-md-6">
            <div class="box">
                <div class="box-header with-border">
                    Total number of <span style="color:#eec853">contacts</span> / <span style="color:#86b300">active memberships</span>
                </div>
                <div class="box-body">
                    <canvas id="contactsGrowth" height="160" style="height: 160px; width: 720px"></canvas>
                </div>
            </div>
        </div>
        <div class="col-lg-4 col-md-6">
            <div class="box">
                <div class="box-header with-border">
                    Loans per month
                </div>
                <div class="box-body">
                    <canvas id="loansAddedByMonth" height="160" style="height: 160px; width: 720px"></canvas>
                </div>
            </div>
        </div>
    </div>


    <div class="row">
        <div class="col-lg-4 col-md-6">
            <div class="box">
                <div class="box-header with-border">
                    New items
                </div>
                <div class="box-body">
                    <div class="chart">
                        <canvas id="itemsAddedByMonth" height="160" style="height: 160px; width: 720px"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-4 col-md-6">
            <div class="box">
                <div class="box-header with-border">
                    Total number of items
                </div>
                <div class="box-body">
                    <canvas id="itemsGrowth" height="160" style="height: 160px; width: 720px"></canvas>
                </div>
            </div>
        </div>
        <div class="col-lg-4 col-md-6">
            <div class="box">
                <div class="box-header with-border">
                    Revenue (<span style="color:#9dbc6b">Memberships</span> / <span style="color:#83B9CC">Events</span> / <span style="color:#ff741e">Other</span>)
                </div>
                <div class="box-body">
                    <canvas id="income" height="160" style="height: 160px; width: 720px"></canvas>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <style type="text/css">
                #map
                {
                    height:350px;
                    width:100%;
                    display:block;
                }
            </style>
            <div id="map"></div>
        </div>
    </div>

    {{ include('partials/google-maps.html.twig', {initMapElement: true}) }}
    <script type="text/javascript">
        function add_markers() {
            map.setZoom(12);
            map.setCenter({
                lat: {{ tenantLat }},
                lng: {{ tenantLng }}
            });

            {% for location in contactLocations %}
            addMarker(map, {{ location.lat }}, {{ location.lng }});
            {% endfor %}

            function addMarker(map, lat, long) {
                var position = {lat: lat, lng: long};
                console.log(position);
                marker = new google.maps.Marker({
                    position: position,
                    map: map,
                    icon: {
                        path: google.maps.SymbolPath.CIRCLE,
                        scale: 6,
                        strokeColor: '#CC0000',
                        strokeWeight: 1,
                        fillColor: '#CC0000',
                        fillOpacity: 0.2
                    }
                });
            }
        }

        window.onload = () => {

            window.setTimeout(() => {
                add_markers();
            }, 1000)

        }
    </script>

{% endblock %}

{% block pagejs %}
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.2.1/Chart.min.js"></script>

    <script>
        $(function () {
            'use strict';

            var contactsAddedByMonth = $("#contactsAddedByMonth");
            var contactsGrowth = $("#contactsGrowth");
            var membershipsGrowth = $("#membershipsGrowth");
            var itemsAddedByMonth = $("#itemsAddedByMonth");
            var itemsGrowth = $("#itemsGrowth");
            var loansAddedByMonth  = $("#loansAddedByMonth");
            var income  = $("#income");

            var barOptions = {
                legend: {
                    display: false
                },
                tooltips: {
                    enabled: true
                },
                hover :{
                    animationDuration:0
                },
                scales: {
                    xAxes: [{
//                        type: 'time',
//                        time: {
//                            unit: 'month'
//                        },
                        ticks: {
                            beginAtZero:true
                        }
                    }],
                    yAxes: [{
                        ticks: {
                            beginAtZero:true
                        }
                    }]
                },
                pointLabelFontFamily : "Quadon Extra Bold",
                scaleFontFamily : "Quadon Extra Bold"
            };

            var barOptions_stacked = {
                legend: {
                    display: false
                },
                tooltips: {
                    enabled: true
                },
                hover :{
                    animationDuration:0
                },
                scales: {
                    xAxes: [{
                        ticks: {
                            beginAtZero:true
                        },
                        scaleLabel:{
                            display:false
                        },
                        gridLines: {
                        },
                        stacked: true
                    }],
                    yAxes: [{
                        gridLines: {
                            display:false,
                            color: "#fff",
                            zeroLineColor: "#fff",
                            zeroLineWidth: 0
                        },
                        ticks: {

                        },
                        stacked: true
                    }]
                },
                pointLabelFontFamily : "Quadon Extra Bold",
                scaleFontFamily : "Quadon Extra Bold"
            };

            var lineOptions = barOptions;

            // Contacts added by month
            var chart_contactsAddedByMonth = new Chart(contactsAddedByMonth, {
                type: 'bar',
                maintainAspectRatio: false,
                data: {
                    labels: [{{ labels|raw }}],
                    datasets: [{
                        label: 'Contacts added',
                        data: [{{ contactsAddedByMonth }}],
                        backgroundColor: "#eec853"
                    }]
                },
                options: barOptions
            });

            // Member growth
            var chart_contactsGrowth = new Chart(contactsGrowth, {
                type: 'line',
                maintainAspectRatio: false,
                data: {
                    labels: [{{ labels|raw }}],
                    datasets: [
                        {
                            label: 'Contacts',
                            data: [{{ contactsGrowth }}],
                            fill: false,
                            borderColor: "#eec853",
                            lineTension: 0
                        },
                        {
                            label: 'Memberships',
                            data: [{{ membershipsGrowth }}],
                            fill: false,
                            borderColor: "#86b300",
                            lineTension: 0
                        }
                    ]
                },
                options: lineOptions
            });


            // Items added by month
            var chart_itemsAddedByMonth = new Chart(itemsAddedByMonth, {
                type: 'bar',
                maintainAspectRatio: false,
                data: {
                    labels: [{{ labels|raw }}],
                    datasets: [{
                        label: 'Items added',
                        data: [{{ itemsAddedByMonth }}],
                        backgroundColor: "#3F3B55"
                    }]
                },
                options: barOptions
            });

            // Items growth
            var chart_itemsGrowth = new Chart(itemsGrowth, {
                type: 'line',
                maintainAspectRatio: false,
                data: {
                    labels: [{{ labels|raw }}],
                    datasets: [{
                        label: 'Total items',
                        data: [{{ itemsGrowth }}],
                        fill: false,
                        borderColor: "#3F3B55",
                        lineTension: 0
                    }]
                },
                options: lineOptions
            });

            // Loans per month
            var chart_loansAddedByMonth = new Chart(loansAddedByMonth, {
                type: 'bar',
                maintainAspectRatio: false,
                data: {
                    labels: [{{ labels|raw }}],
                    datasets: [{
                        label: 'Loans',
                        data: [{{ loansAddedByMonth }}],
                        backgroundColor: "#39cccc"
                    }]
                },
                options: barOptions
            });

            // Loans per month
            var chart_income = new Chart(income, {
                type: 'bar',
                maintainAspectRatio: false,
                data: {
                    labels: [{{ labels|raw }}],
                    datasets: [
                        {
                            label: 'Membership',
                            data: [{{ membershipFeesByMonth }}],
                            backgroundColor: "#9dbc6b"
                        },
                        {
                            label: 'Events',
                            data: [{{ eventFeesByMonth }}],
                            backgroundColor: "#83B9CC"
                        },
                        {
                            label: 'Other',
                            data: [{{ otherFeesByMonth }}],
                            backgroundColor: "#ff741e"
                        }
                    ]
                },
                options: barOptions_stacked
            });

        });

    </script>
{% endblock %}